name: Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ['3.9', '3.10', '3.11']

    steps:
    - uses: actions/checkout@v4

    - name: Install and configure uv (incl. Python)
      uses: astral-sh/setup-uv@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache uv dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/uv # Cache directory used by uv
        # Use uv.lock for the primary cache key for precise dependency matching
        key: ${{ runner.os }}-python-${{ matrix.python-version }}-uv-${{ hashFiles('uv.lock') }}
        restore-keys: |
          ${{ runner.os }}-python-${{ matrix.python-version }}-uv-

    - name: Install dependencies
      run: |
        uv sync --all-extras # Install dependencies from uv.lock, including extras
        uv pip install -e .  # Install the current package in editable mode

    - name: Run tests
      run: |
        python -m pytest --cov=app tests/ --cov-report=xml

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.xml
        fail_ci_if_error: true # Fail CI if Codecov upload fails
        token: ${{ secrets.CODECOV_TOKEN }} # Keep token for private repos or if not using Codecov GitHub App
